  动态规划常用于最优化问题，当某一特定的子问题可能出自于多于一种选择的集合时，动态规划是很有效的。
  分治法是指将问题分成一些独立的子问题，递归求解各子问题，然后合并子问题的解而得到原问题的解。与此不同，动态规划适用于子问题不是独立的情况，也就是各子问题
包含公共的子子问题。在这种情况下，若用分治法会做许多不必要的工作，即重复的求解公共的子子问题。动态规划对每个子子问题只求解一次，将其结果保存在一张表中，
从而避免每次遇到各个子问题时重新计算答案。
  设计步骤：
    描述最优解的结构；（如何有子状态得到当前状态）
    递归定义最优解的值；
    按自底向上的方式计算最优解的值；
    由计算出的结果构造一个最优解；

  一个问题是否能使用动态规划求解，首先要看这个问题是否有最优子结构。正如书上举的最长简单路径和最短路径的问题。具有最优子结构的依据在于子问题相互独立，相互
独立就是指对于包含在该问题中的所有子问题而言，一个子问题经过的顶点，另一个子问题不能再经过。
  动态规划将重叠子问题保存在表中，因此只适合解决子问题空间较小的问题。递归是自顶向下的，动态规划是自底向上的。
