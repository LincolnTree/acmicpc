每对顶点之间都有一条边相连的有向图称为竞赛图。

每个 Spark 应用都由一个驱动器程序（ driver program）来发起集群上的各种并行操作。
驱动器程序通过一个 SparkContext 对象来访问 Spark，是一个叫作 sc 的变量。
sc.textFile() 创建一个代表文件中各行文本的 RDD,可以在这个 RDD 上运行各种并行操作。
RDD支持两种类型的操作：转化操作（transformation）和行动操作（action）。转化操作会由一个 RDD 生成一个新的 RDD。
可以在任何时候定义新的 RDD， 但 Spark 只会惰性计算这些 RDD。

在任何时候都能进行重算是我们为什么把 RDD 描述为“弹性”的原因。当保存 RDD 数据的一台机器失败时， 
Spark 还可以使用这种特性来重算出丢掉的分区，这一过程对用户是完全透明的。

在实际操作中，你会经常用 persist() 来把数据的一部分读取到内存中，并反复查询这部分数据。
Spark 提供了两种创建 RDD 的方式：读取外部数据集，以及在驱动器程序中对一个集合进行并行化。
